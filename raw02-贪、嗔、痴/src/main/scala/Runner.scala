object Runner extends App {

  class I1
  class I2
  class I3
  class I4
  class I5
  class I6
  class I7
  class I8
  class I9
  class I10
  class I11

  type 事情1 = 事情结果#叠加顺境[I1]#叠加顺境[I2]#叠加逆境[I3]#叠加逆境[I4]#叠加逆境[I5]#叠加顺境[I6]#叠加顺境[I7]#叠加困境[I8]#叠加逆境[I9]#叠加逆境[I10]#叠加顺境[I11]

  type 事情2 = 事情1#推进事情
  val 事情2: 事情2 =
    (throw new Exception("ii")): 事情结果#叠加顺境[I1]#叠加顺境[I2]#叠加逆境[I3]#叠加逆境[I4]#叠加逆境[I5]#叠加顺境[I6]#叠加顺境[I7]#叠加困境[I8]#叠加逆境[I9]#叠加逆境[I10]

  type 事情3 = 事情1#推进事情#推进事情#推进事情#推进事情#推进事情 // 没有效果
  val 事情3: 事情3 =
    (throw new Exception("ii")): 事情结果#叠加顺境[I1]#叠加顺境[I2]#叠加逆境[I3]#叠加逆境[I4]#叠加逆境[I5]#叠加顺境[I6]#叠加顺境[I7]#叠加困境[I8]#叠加逆境[I9]#叠加逆境[I10]

  type 事情4 = 事情3#推进逆境
  val 事情4: 事情4 = (throw new Exception("ii")): 事情结果#叠加顺境[I1]#叠加顺境[I2]#叠加逆境[I3]#叠加逆境[I4]#叠加逆境[I5]#叠加顺境[I6]#叠加顺境[I7]#叠加困境[I8]#叠加逆境[I9]

  type 事情5 = 事情4#推进逆境#推进逆境#推进逆境#推进逆境 // 逆境已经推进完毕
  val 事情5: 事情5 = (throw new Exception("ii")): 事情结果#叠加顺境[I1]#叠加顺境[I2]#叠加逆境[I3]#叠加逆境[I4]#叠加逆境[I5]#叠加顺境[I6]#叠加顺境[I7]#叠加困境[I8]#叠加逆境[I9]

  type 事情6 = 事情5#推进事情#推进事情#推进事情#推进事情#推进事情 // 遇到困境
  val 事情6: 事情6 = (throw new Exception("ii")): 事情结果#叠加顺境[I1]#叠加顺境[I2]#叠加逆境[I3]#叠加逆境[I4]#叠加逆境[I5]#叠加顺境[I6]#叠加顺境[I7]#叠加困境[I8]

  type 事情7 = 事情6#走出困境的方法 // 找到方法
  val 事情7: 事情7 = (throw new Exception("ii")): 事情结果#叠加顺境[I1]#叠加顺境[I2]#叠加逆境[I3]#叠加逆境[I4]#叠加逆境[I5]#叠加顺境[I6]#叠加顺境[I7]

  type 事情8 = 事情7#推进事情#推进事情#推进事情#推进事情#推进事情#推进事情#推进事情#推进事情 // 再次遇到逆境
  val 事情8: 事情8 = (throw new Exception("ii")): 事情结果#叠加顺境[I1]#叠加顺境[I2]#叠加逆境[I3]#叠加逆境[I4]#叠加逆境[I5]

  type 事情9 = 事情8#推进逆境#推进逆境#推进逆境#推进逆境 // 逆境推进完毕
  val 事情9: 事情9 = (throw new Exception("ii")): 事情结果#叠加顺境[I1]#叠加顺境[I2]#叠加逆境[I3]

  type 事情10 = 事情9#推进事情#推进事情#推进事情#推进事情 // 事情结束
  val 事情10: 事情10 = (throw new Exception("ii")): 事情结果

}
